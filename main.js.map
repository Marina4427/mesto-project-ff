{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["//закрытие на крестик\r\nfunction closePopupByCross(evt) {\r\n  const button = evt.target;\r\n  const popup = button.closest(\".popup\");\r\n  closePopup(popup);\r\n}\r\n//закрыть попап по Escape\r\nfunction closePopupByEscape(event) {\r\n  if (event.key === \"Escape\") {\r\n    closePopup(document.querySelector(\".popup_is-opened\"));\r\n  }\r\n}\r\n//закрыть попап щелчком на оверлее\r\nfunction closePopupOverlay(evt) {\r\n  if (evt.target.classList.contains(\"popup_is-opened\")) {\r\n    closePopup(evt.target);\r\n  }\r\n}\r\nfunction closePopup(element) {\r\n  element.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closePopupByEscape);\r\n  document.removeEventListener(\"click\", closePopupOverlay);\r\n  const popupCloseButton = element.querySelector(\".popup__close\");\r\n  popupCloseButton.removeEventListener(\"click\", closePopupByCross);\r\n}\r\nfunction openPopup(element) {\r\n  element.classList.add(\"popup_is-opened\", \"popup_is-animated\");\r\n  document.addEventListener(\"keydown\", closePopupByEscape);\r\n  document.addEventListener(\"click\", closePopupOverlay);\r\n  const popupCloseButton = element.querySelector(\".popup__close\");\r\n  popupCloseButton.addEventListener(\"click\", closePopupByCross);\r\n}\r\nexport { openPopup, closePopup };\r\n","export const config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-17',\r\n    headers: {\r\n      authorization: 'eedbd58f-f39c-41fc-bc71-e4b882bd41d1', //myId\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n    \r\nconst getResponse = (res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    // если ошибка, отклоняем промис\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n  \r\n  //получить карточки с сервера\r\nexport const getInitialCards = () => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n      headers: config.headers\r\n    })\r\n      .then(getResponse)\r\n      .catch((err) => {\r\n        console.log(err); // выводим ошибку в консоль\r\n      });\r\n  } \r\n  \r\n  //получить данные о пользователе с сервера\r\nexport const getUser = () => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n      headers: config.headers\r\n    })\r\n      .then(getResponse)\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  \r\n\r\n// Удаление карточки по идентификатору\r\nexport const deleteCardId = (id) => {\r\n    return fetch(`${config.baseUrl}/cards/`+`${id}`, {\r\n       method: \"DELETE\",\r\n       headers: config.headers\r\n     });\r\n   };\r\n\r\n\r\n  // Обновление информации о пользователе\r\nexport  const patchUser = (name, about) => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: config.headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        about,\r\n      }),\r\n    }).then((res) => getResponse(res));\r\n  };\r\n  \r\n \r\n  //добавление новой карточки\r\nexport const postCard = (name, link) => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: config.headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        link,\r\n      }),\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        return Promise.reject(`Ошибка: ${response.status}`);\r\n      }\r\n      return response.json();\r\n    });\r\n  };\r\n\r\n  // Добавление лайка карточке\r\nexport const addLikeCard = (id)  => {\r\n  return fetch(`${config.baseUrl}/cards/likes/`+`${id}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers\r\n  })\r\n  .then(response => {\r\n    if (!response.ok) {\r\n      return Promise.reject(`Ошибка: ${response.status}`);\r\n    }\r\n    return response.json();\r\n  });\r\n};\r\n\r\n// Удаление лайка с карточки\r\nexport const deleteLikeCard = (id) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/`+`${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers\r\n  })\r\n  .then(response => {\r\n    if (!response.ok) {\r\n      return Promise.reject(`Ошибка: ${response.status}`);\r\n    }\r\n    return response.json();\r\n  });\r\n};\r\n\r\n// Обновление аватара пользователя\r\nexport const patchAvatar = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ avatar: avatar }),\r\n  });\r\n};\r\n//ux\r\nconst renderLoading = ({ buttonElement, isLoading }) => {\r\n  if (isLoading) {\r\n    buttonElement.textContent = 'Сохранение...';\r\n  } else {\r\n    buttonElement.textContent = 'Сохранить';\r\n  }\r\n};\r\n\r\n","import { deleteLikeCard, addLikeCard } from \"./api\";\n\nexport function putLike (likeButton, item, likeCounter) {\n  if (likeButton.classList.contains(\"card__like-button_is-active\")) {\n    // Пользователю уже понравилась карточка, поэтому выполните операцию \"не нравится\".\n    deleteLikeCard(item._id)\n      .then((res) => {\n        likeCounter.textContent = res.likes.length;\n        likeButton.classList.remove(\"card__like-button_is-active\");\n      })\n      .catch((err) => {\n        console.error(\"Произошла ошибка при удалении лайка:\", err);\n      });\n  } else {\n    addLikeCard(item._id)\n    .then((res) => {\n      likeButton.classList.add(\"card__like-button_is-active\");\n      likeCounter.textContent = res.likes.length;\n    })\n    .catch((err) => {\n      console.error(\"Произошла ошибка при добавлении лайка:\", err);\n    });\n  }\n}\n\nexport function createCard(item, callbacksObject, userId) {\n  const { deleteCardCallback, openImageCallback, likeCallback } =\n    callbacksObject;\n\n  const cardTemplate = document.querySelector(\"#card-template\").content;\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  let likeCounter = cardElement.querySelector('.card__like-counter');\n  const cardDeleteButton = cardElement.querySelector(\".card__delete-button\");\n  const likeButton = cardElement.querySelector('.card__like-button');\n\n  cardTitle.textContent = item.name;\n  cardImage.src = item.link;\n  cardImage.alt = item.name;\n  likeCounter.textContent = item.likes.length;\n\n  let isLike = item.likes.some((likeItem) => likeItem._id === userId);\n\n  if (isLike) {\n    likeButton.classList.add('card__like-button_is-active');\n  } else {likeButton.classList.remove('card__like-button_is-active');}\n\n  // basket\n  cardDeleteButton.style.display = (item.owner._id === userId) ? \"block\" : \"none\";\n\n  // @todo: слушатель удаления карточки\n  cardDeleteButton.addEventListener(\"click\", () => {\n    deleteCardCallback(cardElement, item._id);\n  });\n  //слушатель лайка\n  likeButton.addEventListener(\"click\", () => {\n    likeCallback(likeButton, item, likeCounter, userId);\n  });\n\n  // Слушатель добавления картинки\n  cardImage.addEventListener(\"click\", () => {\n    openImageCallback(item.name, item.link);\n  });\n  return cardElement;\n}\n","export const validationConfig = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible'\n  };\n\nconst showInputError = (formElement, inputElement, validationConfig) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.add(validationConfig.inputErrorClass);\n    errorElement.classList.add(validationConfig.errorClass);\n    errorElement.textContent = inputElement.validationMessage;\n  };\n\nexport const hideInputError = (formElement, inputElement, validationConfig) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.remove(validationConfig.inputErrorClass);\n    errorElement.classList.remove(validationConfig.errorClass);\n    errorElement.textContent = \"\";\n  };\n\n  // Проверить, есть ли хотя бы одно невалидное поле\n  const hasInvalidInput = (inputList) => {\n    return inputList.some((inputElement) => {\n      return !inputElement.validity.valid;\n    });\n  };\n\n  function toggleButtonState (inputList, buttonElement, validationConfig) {\n    if (hasInvalidInput(inputList, validationConfig)) {\n      buttonElement.setAttribute(\"disabled\", true);\n      buttonElement.classList.add(validationConfig.inactiveButtonClass);\n    } else {\n      buttonElement.removeAttribute(\"disabled\");\n      buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n    }\n  };\n\n  function checkInputValidity (formElement, inputElement, validationConfig) {\n    if (inputElement.validity.patternMismatch) {\n      inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n    } else {\n      inputElement.setCustomValidity('');\n    }\n      if (!inputElement.validity.valid) {\n      showInputError(formElement, inputElement, validationConfig);\n    } else {\n      hideInputError(formElement, inputElement, validationConfig);\n    }\n  };\n\n  function setEventListeners (formElement, validationConfig) {\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n    inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', function () {\n        checkInputValidity(formElement, inputElement, validationConfig);\n        toggleButtonState(inputList, buttonElement, validationConfig);\n      });\n    });\n  };\n\nexport  function enableValidation (validationConfig) {\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n    formList.forEach((formElement) => {\n      formElement.addEventListener('submit', function (evt) {\n        evt.preventDefault();\n      });\n      setEventListeners(formElement, validationConfig);\n    });\n  };\n\nexport  function clearValidation (formElement, validationConfig) {\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n    inputList.forEach((inputElement) =>\n      hideInputError(formElement, inputElement, validationConfig)\n    );\n    toggleButtonState(inputList, buttonElement, validationConfig);\n  };\n","import \"./pages/index.css\";\nimport { openPopup, closePopup } from \"./components/modal.js\";\nimport { createCard, putLike } from \"./components/card.js\";\nimport { validationConfig, enableValidation, clearValidation } from \"./components/validation.js\"\nimport { getUser, getInitialCards, postCard, patchUser, deleteCardId, patchAvatar} from \"./components/api.js\"\n\nconst placesList = document.querySelector(\".places__list\");\n\nconst popupEditElement = document.querySelector(\".profile__edit-button\");\nconst popupAddElement = document.querySelector(\".profile__add-button\");\nconst popupEditContent = document.querySelector(\".popup_type_edit\");\nconst popupAddContent = document.querySelector(\".popup_type_new-card\");\n\nconst popupImage = document.querySelector(\".popup_type_image\");\nconst popupImageCaption = popupImage.querySelector(\".popup__caption\");\nconst popupImagePicture = popupImage.querySelector(\".popup__image\");\n\nconst formCardElement = document.forms[\"new-place\"];\nconst nameInput = document.querySelector(\".popup__input_type_name\");\nconst jobInput = document.querySelector(\".popup__input_type_description\");\n\nconst formPersonElement = document.forms[\"edit-profile\"];\nconst cardNameInput = document.querySelector(\".popup__input_type_card-name\");\nconst cardUrlInput = document.querySelector(\".popup__input_type_url\");\n\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst avatarImageButton = document.querySelector('.profile__image');\nconst popupAvatar = document.querySelector('.popup_type_new-avatar');\nconst avatarInput = document.querySelector('input[name=\"link_avatar\"]');\n\nlet userId = '';\n\n// Объект с колбэками для работы с событиями карточек\nconst callbacksObject = {\n  likeCallback: putLike,\n  deleteCardCallback: openPopupDelete,\n  openImageCallback: openImagePopup,\n};\n\n// Функция открытия модального окна с изображением карточки\nfunction openImagePopup(cardName, cardLink) {\n  popupImagePicture.src = cardLink;\n  popupImagePicture.alt = cardName;\n  popupImageCaption.textContent = cardName;\n  openPopup(popupImage);\n}\n\n//открыть попап удалить карточку\nfunction openPopupDelete(cardElement, _id) {\n  const formDeleteCard = document.forms[\"delete-card\"];\n  const deletePopup = document.querySelector(\".popup_type_delete-card\");\n  const formDeleteCardButton = formDeleteCard.querySelector('.popup__button');\n  openPopup(deletePopup);\n  // Слушатель подтверждения удаления карточки по id\n  formDeleteCardButton.addEventListener(\"click\", () => {\n    cardElement.remove();\n    deleteCardId(_id);\n    closePopup(deletePopup);\n  });\n}\n\n//запрос на сервер данных Profile и отобразить их при загрузке страницы;\nconst updateProfileData = (data) => {\n  profileTitle.textContent = data.name;\n  profileDescription.textContent = data.about;\n  userId = data._id;\n  avatarImageButton.style.backgroundImage = `url(${data.avatar})`;\n}\n\n//ф-ия смены имени и описания профиля\nfunction changeProfileFormSubmit(evt) {\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\n  const buttonSave = formPersonElement.querySelector('.popup__button');\n  loading(buttonSave, true);\n  const name = profileTitle.textContent = nameInput.value;\n  const about = profileDescription.textContent = jobInput.value;\n  patchUser(name, about).then(dataUser => {\n    // Обновление отображаемых данных профиля на странице\n    profileTitle.textContent = dataUser.name;\n    profileDescription.textContent = dataUser.about;\n  });\n  loading(buttonSave, false);\n  const popup = formPersonElement.closest(\".popup\");\n  closePopup(popup);\n}\n\n//ф-я добавления новой карточки по ссылке\nfunction addCardFormSubmit(evt) {\n  evt.preventDefault();\n  const buttonSave = formCardElement.querySelector('.popup__button');\n  loading(buttonSave, true);\n  const cardNameValue = cardNameInput.value;\n  const cardUrlValue = cardUrlInput.value;\n  //отправить на сервер и вернуть данные карточки\n      postCard(cardNameValue, cardUrlValue)\n      .then(dataCard => {\n        placesList.prepend(createCard(dataCard, callbacksObject, userId));\n      });\n  loading(buttonSave, false);\n  const popup = formCardElement.closest(\".popup\");\n  closePopup(popup);\n}\n\n//вывод карточек с сервера\nconst renderCards = (dataCards) => {\n    dataCards.forEach((item) => {\n    placesList.append(createCard(item, callbacksObject, userId));\n  });\n};\n\n//слушатель - изменение описания профиля\nformPersonElement.addEventListener(\"submit\", function(evt) {\n  changeProfileFormSubmit(evt);\n});\n\n//слушатель - добавление карточки по ссылке\nformCardElement.addEventListener(\"submit\", addCardFormSubmit);\n\n//слушатель - открыть попап \"Редактировать профиль\"\npopupEditElement.addEventListener(\"click\", () => {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  clearValidation(popupEditContent, validationConfig);\n  openPopup(popupEditContent);\n});\n\n//слушатель - открыть попап \"Новое место\"\npopupAddElement.addEventListener(\"click\", () => {\n  cardNameInput.value = \"\";\n  cardUrlInput.value = \"\";\n  clearValidation(popupAddContent, validationConfig);\n  openPopup(popupAddContent);\n});\n\n// UX\nconst loading = ( button, isLoading ) => {\n  button.textContent = isLoading ? \"Сохранение...\" : \"Сохранить\";\n};\n\navatarImageButton.addEventListener('click', () => {\n  avatarInput.value = '';\n  clearValidation(popupAvatar, validationConfig);\n  openPopup(popupAvatar);\n  const formElement = document.querySelector('form[name=\"new-avatar\"]');\n  const buttonAvatarClose = formElement.querySelector('.popup__button');\n  buttonAvatarClose.addEventListener('click', () => {\n    loading(buttonAvatarClose, true);\n    const avatar = avatarInput.value;\n    patchAvatar(avatar);\n    avatarImageButton.style.backgroundImage = `url(${avatar})`;\n    loading(buttonAvatarClose, false);\n    closePopup(popupAvatar);\n  })\n})\n\nPromise.all([getUser(), getInitialCards()])\n.then((result) => {\n  const user = result[0];\n    userId = user._id;\n    const cards = result[1];\n    updateProfileData(user);\n    renderCards(cards, callbacksObject, user._id);\n})\n.catch((err) => {\n  console.error(\"Произошла ошибка при получении данных:\", err);\n});\n\nenableValidation (validationConfig);\n"],"names":["closePopupByCross","evt","closePopup","target","closest","closePopupByEscape","event","key","document","querySelector","closePopupOverlay","classList","contains","element","remove","removeEventListener","openPopup","add","addEventListener","config","baseUrl","headers","authorization","getResponse","res","ok","json","Promise","reject","concat","status","createCard","item","callbacksObject","userId","deleteCardCallback","openImageCallback","likeCallback","cardElement","content","cloneNode","cardImage","cardTitle","likeCounter","cardDeleteButton","likeButton","textContent","name","src","link","alt","likes","length","some","likeItem","_id","style","display","owner","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","id","hasInvalidInput","inputList","validity","valid","toggleButtonState","buttonElement","setAttribute","removeAttribute","clearValidation","Array","from","querySelectorAll","forEach","placesList","popupEditElement","popupAddElement","popupEditContent","popupAddContent","popupImage","popupImageCaption","popupImagePicture","formCardElement","forms","nameInput","jobInput","formPersonElement","cardNameInput","cardUrlInput","profileTitle","profileDescription","avatarImageButton","popupAvatar","avatarInput","fetch","method","then","response","catch","err","console","error","addLikeCard","formDeleteCard","deletePopup","formDeleteCardButton","cardName","cardLink","preventDefault","about","buttonSave","loading","value","body","JSON","stringify","dataUser","changeProfileFormSubmit","dataCard","prepend","button","isLoading","buttonAvatarClose","avatar","patchAvatar","backgroundImage","all","log","result","user","data","dataCards","cards","append","patternMismatch","setCustomValidity","dataset","errorMessage","validationMessage","showInputError","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}