{"version":3,"file":"main.js","mappings":"mBACA,SAASA,EAAkBC,GAGzBC,EAFeD,EAAIE,OACEC,QAAQ,UAE/B,CAEA,SAASC,EAAmBC,GACR,WAAdA,EAAMC,KACRL,EAAWM,SAASC,cAAc,oBAEtC,CAEA,SAASC,EAAkBT,GACrBA,EAAIE,OAAOQ,UAAUC,SAAS,oBAChCV,EAAWD,EAAIE,OAEnB,CACA,SAASD,EAAWW,GAClBA,EAAQF,UAAUG,OAAO,mBACzBN,SAASO,oBAAoB,UAAWV,GACxCG,SAASO,oBAAoB,QAASL,GACbG,EAAQJ,cAAc,iBAC9BM,oBAAoB,QAASf,EAChD,CACA,SAASgB,EAAUH,GACjBA,EAAQF,UAAUM,IAAI,mBACtBT,SAASU,iBAAiB,UAAWb,GACrCG,SAASU,iBAAiB,QAASR,GACVG,EAAQJ,cAAc,iBAC9BS,iBAAiB,QAASlB,EAC7C,CCFO,SAASmB,EAAWC,EAAMC,EAAiBC,GAChD,IACEC,EAKEF,EALFE,kBACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,wBACAC,EAEEL,EAFFK,eACAC,EACEN,EADFM,YAIIC,EADepB,SAASC,cAAc,kBAAkBoB,QAC7BpB,cAAc,SAASqB,WAAU,GAC5DC,EAAYH,EAAYnB,cAAc,gBACtCuB,EAAYJ,EAAYnB,cAAc,gBACxCwB,EAAcL,EAAYnB,cAAc,uBACtCyB,EAAmBN,EAAYnB,cAAc,wBAC7C0B,EAAaP,EAAYnB,cAAc,sBAgC7C,OA9BAuB,EAAUI,YAAchB,EAAKiB,KAC7BN,EAAUO,IAAMlB,EAAKmB,KACrBR,EAAUS,IAAMpB,EAAKiB,KACrBJ,EAAYG,YAAchB,EAAKqB,MAAMC,OAExBtB,EAAKqB,MAAME,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAQvB,CAAM,IAGhEa,EAAWxB,UAAUM,IAAI,+BAEzBkB,EAAWxB,UAAUG,OAAO,+BAI9BoB,EAAiBY,MAAMC,QAAU3B,EAAK4B,MAAMH,MAAQvB,EAAS,QAAU,OAGvEY,EAAiBhB,iBAAiB,SAAS,WACzCO,EAAwBG,EAAaR,EAAKyB,IAC5C,IAGAV,EAAWjB,iBAAiB,SAAS,WACnCM,EAAaW,EAAYf,EAAMa,EAAaP,EAAgBC,EAC9D,IAGAI,EAAUb,iBAAiB,SAAS,WAClCK,EAAkBH,EAAKiB,KAAMjB,EAAKmB,KACpC,IACOX,CACT,CC7EO,IAAMqB,EAAmB,CAC5BC,aAAc,eACdC,cAAe,gBACfC,qBAAsB,iBACtBC,oBAAqB,yBACrBC,gBAAiB,0BACjBC,WAAY,wBAUHC,EAAiB,SAACC,EAAaC,EAAcT,GACtD,IAAMU,EAAeF,EAAYhD,cAAc,IAADmD,OAAKF,EAAaG,GAAE,WAClEH,EAAa/C,UAAUG,OAAOmC,EAAiBK,iBAC/CK,EAAahD,UAAUG,OAAOmC,EAAiBM,YAC/CI,EAAavB,YAAc,EAC7B,EAGM0B,EAAkB,SAACC,GACvB,OAAOA,EAAUpB,MAAK,SAACe,GACrB,OAAQA,EAAaM,SAASC,KAChC,GACF,EAEA,SAASC,EAAmBH,EAAWI,EAAelB,GAChDa,EAAgBC,EAAWd,IAC7BkB,EAAcC,aAAa,YAAY,GACvCD,EAAcxD,UAAUM,IAAIgC,EAAiBI,uBAE7Cc,EAAcE,gBAAgB,YAC9BF,EAAcxD,UAAUG,OAAOmC,EAAiBI,qBAEpD,CAoCM,SAASiB,EAAiBb,EAAaR,GAC3C,IAAMc,EAAYQ,MAAMC,KAAKf,EAAYgB,iBAAiBxB,EAAiBE,gBACrEgB,EAAgBV,EAAYhD,cAAcwC,EAAiBG,sBACjEW,EAAUW,SAAQ,SAAChB,GAAY,OAC7BF,EAAeC,EAAaC,EAAcT,EAAiB,IAE7DiB,EAAkBH,EAAWI,EAAelB,EAC9C,CCjFK,IAAM0B,EAAS,CACpBC,QAAS,4CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAIPC,EAAc,SAACC,GAC1B,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,WAADxB,OAAYoB,EAAIK,QACvC,ECKMC,EAAa9E,SAASC,cAAc,iBAEpC8E,EAAmB/E,SAASC,cAAc,yBAC1C+E,EAAkBhF,SAASC,cAAc,wBACzCgF,EAAmBjF,SAASC,cAAc,oBAC1CiF,EAAkBlF,SAASC,cAAc,wBAEzCkF,EAAanF,SAASC,cAAc,qBACpCmF,EAAoBD,EAAWlF,cAAc,mBAC7CoF,EAAoBF,EAAWlF,cAAc,iBAE7CqF,EAAkBtF,SAASuF,MAAM,aACjCC,EAAaF,EAAgBrF,cAAc,kBAC3CwF,EAAYzF,SAASC,cAAc,2BACnCyF,EAAW1F,SAASC,cAAc,kCAElC0F,EAAoB3F,SAASuF,MAAM,gBACnCK,EAAgB5F,SAASC,cAAc,gCACvC4F,EAAe7F,SAASC,cAAc,0BAEtC6F,EAAe9F,SAASC,cAAc,mBACtC8F,EAAqB/F,SAASC,cAAc,yBAC5C+F,EAAoBhG,SAASC,cAAc,mBAC3CgG,EAAcjG,SAASC,cAAc,0BACrCiG,EAAclG,SAASC,cAAc,6BAIrCkG,EADiBnG,SAASuF,MAAM,eACMtF,cAAc,kBACpDmG,EAAcpG,SAASC,cAAc,2BAErCoG,EAAoBrG,SAASuF,MAAM,cACnCe,EAAmBD,EAAkBpG,cAAc,kBAErDa,EAAS,GAGPD,EAAkB,CACtBG,aHzDK,SACLW,EACAf,EACAa,EACAP,EACAC,GAEIQ,EAAWxB,UAAUC,SAAS,+BAEhCc,EAAeN,EAAKyB,KACjBkE,MAAK,SAAC/B,GACL/C,EAAYG,YAAc4C,EAAIvC,MAAMC,OACpCP,EAAWxB,UAAUG,OAAO,8BAC9B,IACCkG,OAAM,SAACC,GACNC,QAAQC,MAAM,wCAAyCF,EACzD,IAEFtF,EAAYP,EAAKyB,KACdkE,MAAK,SAAC/B,GACL7C,EAAWxB,UAAUM,IAAI,+BACzBgB,EAAYG,YAAc4C,EAAIvC,MAAMC,MACtC,IACCsE,OAAM,SAACC,GACNC,QAAQC,MAAM,0CAA2CF,EAC3D,GAEN,EG+BEG,mBAAoBC,EACpB9F,kBAOF,SAAwB+F,EAAUC,GAChC1B,EAAkBvD,IAAMiF,EACxB1B,EAAkBrD,IAAM8E,EACxB1B,EAAkBxD,YAAckF,EAChCtG,EAAU2E,EACZ,EAXElE,wBAyBF,SAAyBG,EAAa4F,GACpCb,EAAqB/E,YAAcA,EACnC+E,EAAqBa,OAASA,EAC9BxG,EAAU4F,EACZ,EA5BElF,eDuB4B,SAACmC,GAC7B,OAAO4D,MAAM,GAAA7D,OAAGe,EAAOC,QAAO,oBAAAhB,OAAqBC,GAAM,CACvD6D,OAAQ,SACR7C,QAASF,EAAOE,UAEjBkC,KAAKhC,EACR,EC5BEpD,YDYyB,SAACkC,GAC1B,OAAO4D,MAAM,GAAA7D,OAAGe,EAAOC,QAAO,oBAAAhB,OAAqBC,GAAM,CACvD6D,OAAQ,MACR7C,QAASF,EAAOE,UAEjBkC,KAAKhC,EACR,GCNA,SAASsC,EAAWzF,EAAaiB,GDnCL,IAACgB,KCoCdhB,EDnCN4E,MAAM,GAAA7D,OAAGe,EAAOC,QAAO,cAAAhB,OAAeC,GAAM,CACjD6D,OAAQ,SACR7C,QAASF,EAAOE,UAEjBkC,KAAKhC,ICgCHgC,MAAK,WACJnF,EAAYd,SACZZ,EAAW0G,EACb,IACCI,OAAM,SAACC,GACNC,QAAQC,MAAM,gCAAiCF,EACjD,GACJ,CASAN,EAAqBzF,iBAAiB,SAAS,WAC7CmG,EAAWV,EAAqB/E,YAAa+E,EAAqBa,OACpE,IA4DArB,EAAkBjF,iBAAiB,UAAU,SAAUjB,IAjDvD,SAAiCA,GAC/BA,EAAI0H,iBACJ,ID3DwBtF,EAAMuF,EC2DxB5B,EAAaG,EAAkB1F,cAAc,kBACnDoH,EAAQ7B,GAAY,ID5DI3D,EC6DViE,EAAalE,YAAc6D,EAAU6B,MD7DrBF,EC8DfrB,EAAmBnE,YAAc8D,EAAS4B,MD7DlDL,MAAM,GAAD7D,OAAIe,EAAOC,QAAO,aAAa,CACzC8C,OAAQ,QACR7C,QAASF,EAAOE,QAChBkD,KAAMC,KAAKC,UAAU,CACnB5F,KAAAA,EACAuF,MAAAA,MAGHb,KAAKhC,ICuDHgC,MAAK,SAACmB,GAEL5B,EAAalE,YAAc8F,EAAS7F,KACpCkE,EAAmBnE,YAAc8F,EAASN,MAC1C1H,EAAWuF,EACb,IACCuB,OAAM,SAACC,GACNC,QAAQC,MAAM,iCAAkCF,EAClD,IACCkB,SAAQ,WACPN,EAAQ7B,GAAY,EACtB,GACJ,CA+BEoC,CAAwBnI,EAC1B,IAGA6F,EAAgB5E,iBAAiB,UAhCjC,SAA2BjB,GAGzB,IDrEuBoC,EAAME,ECmE7BtC,EAAI0H,iBACJE,EAAQ7B,GAAY,IDpEG3D,ECqED+D,EAAc0B,MDrEPvF,ECsER8D,EAAayB,MDrE3BL,MAAM,GAAD7D,OAAIe,EAAOC,QAAO,UAAU,CACtC8C,OAAQ,OACR7C,QAASF,EAAOE,QAChBkD,KAAMC,KAAKC,UAAU,CACnB5F,KAAAA,EACAE,KAAAA,MAGHwE,KAAKhC,ICgEHgC,MAAK,SAACsB,GACL/C,EAAWgD,QAAQnH,EAAWkH,EAAUhH,EAAiBC,IACzDpB,EAAWwF,EACb,IACCsB,OAAM,SAACC,GACNC,QAAQC,MAAM,kCAAmCF,EACnD,IACCkB,SAAQ,WACPN,EAAQ7B,GAAY,EACtB,GACJ,IAkBAT,EAAiBrE,iBAAiB,SAAS,WACzC+E,EAAU6B,MAAQxB,EAAalE,YAC/B8D,EAAS4B,MAAQvB,EAAmBnE,YACpCkC,EAAgBmB,EAAkBxC,GAClCjC,EAAUyE,EACZ,IAGAD,EAAgBtE,iBAAiB,SAAS,WACxCkF,EAAc0B,MAAQ,GACtBzB,EAAayB,MAAQ,GACrBxD,EAAgBoB,EAAiBzC,GACjCjC,EAAU0E,EACZ,IAGA,IAAMmC,EAAU,SAACU,EAAQC,GACvBD,EAAOnG,YAAcoG,EAAY,gBAAkB,WACrD,EAGAhC,EAAkBtF,iBAAiB,SAAS,WAC1CwF,EAAYoB,MAAQ,GACpBxD,EAAgBmC,EAAaxD,GAC7BjC,EAAUyF,EACZ,IAGAI,EAAkB3F,iBAAiB,UAAU,SAACjB,GAC5CA,EAAI0H,iBACJE,EAAQf,GAAkB,GAC1B,IAAM2B,EAAS/B,EAAYoB,MACrBY,EAAgBlC,EAAkB1D,MAAM6F,iBDrGrB,SAACF,GAC1B,OAAOhB,MAAM,GAAD7D,OAAIe,EAAOC,QAAO,oBAAoB,CAChD8C,OAAQ,QACR7C,QAASF,EAAOE,QAChBkD,KAAMC,KAAKC,UAAU,CAAEQ,OAAQA,MAEhC1B,KAAKhC,EACR,EC+FE6D,CAAYH,GACT1B,MAAK,SAAC8B,GACLrC,EAAkB1D,MAAM6F,gBAAkB,OAAH/E,OAAUiF,EAAKJ,OAAM,KAC5DvI,EAAWuG,EACb,IACCO,OAAM,SAACC,GACNC,QAAQC,MAAM,iCAAkCF,GAChDT,EAAkB1D,MAAM6F,gBAAkBD,CAC5C,IACCP,SAAQ,WACPN,EAAQf,GAAkB,EAC5B,GACJ,IAEA3B,QAAQ2D,IAAI,CDpLHrB,MAAM,GAAD7D,OAAIe,EAAOC,QAAO,aAAa,CACzCC,QAASF,EAAOE,UAEfkC,KAAKhC,GACLgC,MAAK,SAAC8B,GACL,OAAOA,CACT,IAjBKpB,MAAM,GAAD7D,OAAIe,EAAOC,QAAO,UAAU,CACtCC,QAASF,EAAOE,UAEjBkC,KAAKhC,GACLgC,MAAK,SAAC8B,GACL,OAAOA,CACT,MC0LC9B,MAAK,SAACgC,GACL,IAAMC,EAAOD,EAAO,GACpBzH,EAAS0H,EAAKnG,IACd,IApHuBgG,EAkDNI,EAkEXC,EAAQH,EAAO,GApHEF,EAqHLG,EApHpB1C,EAAalE,YAAcyG,EAAKxG,KAChCkE,EAAmBnE,YAAcyG,EAAKjB,MACtCtG,EAASuH,EAAKhG,IACd2D,EAAkB1D,MAAM6F,gBAAkB,OAAH/E,OAAUiF,EAAKJ,OAAM,KA8CzCQ,EAoELC,EAAwBF,EAAKnG,IAnE3CoG,EAAUvE,SAAQ,SAACtD,GACjBkE,EAAW6D,OAAOhI,EAAWC,EAAMC,EAAiBC,GACtD,GAkEA,IACC0F,OAAM,SAACC,GACNC,QAAQC,MAAM,yCAA0CF,EAC1D,IF3JM,SAA2BhE,GACdsB,MAAMC,KAAKhE,SAASiE,iBAAiBxB,EAAiBC,eAC9DwB,SAAQ,SAACjB,GAChBA,EAAYvC,iBAAiB,UAAU,SAAUjB,GAC/CA,EAAI0H,gBACN,IAhBJ,SAA4BlE,EAAaR,GACvC,IAAMc,EAAYQ,MAAMC,KAAKf,EAAYgB,iBAAiBxB,EAAiBE,gBACrEgB,EAAgBV,EAAYhD,cAAcwC,EAAiBG,sBACjEW,EAAUW,SAAQ,SAAChB,GACjBA,EAAaxC,iBAAiB,SAAS,YAjB3C,SAA6BuC,EAAaC,EAAcT,GAClDS,EAAaM,SAASoF,gBACxB1F,EAAa2F,kBAAkB3F,EAAa4F,QAAQC,cAEpD7F,EAAa2F,kBAAkB,IAE1B3F,EAAaM,SAASC,MAG3BT,EAAeC,EAAaC,EAAcT,GAxCzB,SAACQ,EAAaC,EAAcT,GAC/C,IAAMU,EAAeF,EAAYhD,cAAc,IAADmD,OAAKF,EAAaG,GAAE,WAClEH,EAAa/C,UAAUM,IAAIgC,EAAiBK,iBAC5CK,EAAahD,UAAUM,IAAIgC,EAAiBM,YAC5CI,EAAavB,YAAcsB,EAAa8F,iBAC1C,CAiCIC,CAAehG,EAAaC,EAAcT,EAI9C,CAOMyG,CAAmBjG,EAAaC,EAAcT,GAC9CiB,EAAkBH,EAAWI,EAAelB,EAC9C,GACF,GACF,CAQI0G,CAAkBlG,EAAaR,EACjC,GACF,CEqJF2G,CAAiB3G,E","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["//закрытие на крестик\nfunction closePopupByCross(evt) {\n  const button = evt.target;\n  const popup = button.closest(\".popup\");\n  closePopup(popup);\n}\n//закрыть попап по Escape\nfunction closePopupByEscape(event) {\n  if (event.key === \"Escape\") {\n    closePopup(document.querySelector(\".popup_is-opened\"));\n  }\n}\n//закрыть попап щелчком на оверлее\nfunction closePopupOverlay(evt) {\n  if (evt.target.classList.contains(\"popup_is-opened\")) {\n    closePopup(evt.target);\n  }\n}\nfunction closePopup(element) {\n  element.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closePopupByEscape);\n  document.removeEventListener(\"click\", closePopupOverlay);\n  const popupCloseButton = element.querySelector(\".popup__close\");\n  popupCloseButton.removeEventListener(\"click\", closePopupByCross);\n}\nfunction openPopup(element) {\n  element.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closePopupByEscape);\n  document.addEventListener(\"click\", closePopupOverlay);\n  const popupCloseButton = element.querySelector(\".popup__close\");\n  popupCloseButton.addEventListener(\"click\", closePopupByCross);\n}\nexport { openPopup, closePopup };\n","export function putLike(\n  likeButton,\n  item,\n  likeCounter,\n  deleteLikeCard,\n  addLikeCard\n) {\n  if (likeButton.classList.contains(\"card__like-button_is-active\")) {\n    // Пользователю уже понравилась карточка, поэтому выполните операцию \"не нравится\".\n    deleteLikeCard(item._id)\n      .then((res) => {\n        likeCounter.textContent = res.likes.length;\n        likeButton.classList.remove(\"card__like-button_is-active\");\n      })\n      .catch((err) => {\n        console.error(\"Произошла ошибка при удалении лайка:\", err);\n      });\n  } else {\n    addLikeCard(item._id)\n      .then((res) => {\n        likeButton.classList.add(\"card__like-button_is-active\");\n        likeCounter.textContent = res.likes.length;\n      })\n      .catch((err) => {\n        console.error(\"Произошла ошибка при добавлении лайка:\", err);\n      });\n  }\n}\n\nexport function createCard(item, callbacksObject, userId) {\n  const {\n    openImageCallback,\n    likeCallback,\n    openDeletePopupCallBack,\n    deleteLikeCard,\n    addLikeCard,\n  } = callbacksObject;\n\n  const cardTemplate = document.querySelector(\"#card-template\").content;\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  let likeCounter = cardElement.querySelector(\".card__like-counter\");\n  const cardDeleteButton = cardElement.querySelector(\".card__delete-button\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n\n  cardTitle.textContent = item.name;\n  cardImage.src = item.link;\n  cardImage.alt = item.name;\n  likeCounter.textContent = item.likes.length;\n\n  let isLike = item.likes.some((likeItem) => likeItem._id === userId);\n\n  if (isLike) {\n    likeButton.classList.add(\"card__like-button_is-active\");\n  } else {\n    likeButton.classList.remove(\"card__like-button_is-active\");\n  }\n\n  // basket\n  cardDeleteButton.style.display = item.owner._id === userId ? \"block\" : \"none\";\n\n  // @todo: слушатель удаления карточки\n  cardDeleteButton.addEventListener(\"click\", () => {\n    openDeletePopupCallBack(cardElement, item._id);\n  });\n\n  //слушатель лайка\n  likeButton.addEventListener(\"click\", () => {\n    likeCallback(likeButton, item, likeCounter, deleteLikeCard, addLikeCard);\n  });\n\n  // Слушатель добавления картинки\n  cardImage.addEventListener(\"click\", () => {\n    openImageCallback(item.name, item.link);\n  });\n  return cardElement;\n}\n","export const validationConfig = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible'\n  };\n\nconst showInputError = (formElement, inputElement, validationConfig) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.add(validationConfig.inputErrorClass);\n    errorElement.classList.add(validationConfig.errorClass);\n    errorElement.textContent = inputElement.validationMessage;\n  };\n\nexport const hideInputError = (formElement, inputElement, validationConfig) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.remove(validationConfig.inputErrorClass);\n    errorElement.classList.remove(validationConfig.errorClass);\n    errorElement.textContent = \"\";\n  };\n\n  // Проверить, есть ли хотя бы одно невалидное поле\n  const hasInvalidInput = (inputList) => {\n    return inputList.some((inputElement) => {\n      return !inputElement.validity.valid;\n    });\n  };\n\n  function toggleButtonState (inputList, buttonElement, validationConfig) {\n    if (hasInvalidInput(inputList, validationConfig)) {\n      buttonElement.setAttribute(\"disabled\", true);\n      buttonElement.classList.add(validationConfig.inactiveButtonClass);\n    } else {\n      buttonElement.removeAttribute(\"disabled\");\n      buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n    }\n  };\n\n  function checkInputValidity (formElement, inputElement, validationConfig) {\n    if (inputElement.validity.patternMismatch) {\n      inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n    } else {\n      inputElement.setCustomValidity('');\n    }\n      if (!inputElement.validity.valid) {\n      showInputError(formElement, inputElement, validationConfig);\n    } else {\n      hideInputError(formElement, inputElement, validationConfig);\n    }\n  };\n\n  function setEventListeners (formElement, validationConfig) {\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n    inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', function () {\n        checkInputValidity(formElement, inputElement, validationConfig);\n        toggleButtonState(inputList, buttonElement, validationConfig);\n      });\n    });\n  };\n\nexport  function enableValidation (validationConfig) {\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n    formList.forEach((formElement) => {\n      formElement.addEventListener('submit', function (evt) {\n        evt.preventDefault();\n      });\n      setEventListeners(formElement, validationConfig);\n    });\n  };\n\nexport  function clearValidation (formElement, validationConfig) {\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n    inputList.forEach((inputElement) =>\n      hideInputError(formElement, inputElement, validationConfig)\n    );\n    toggleButtonState(inputList, buttonElement, validationConfig);\n  };\n","export const config = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-17\",\n  headers: {\n    authorization: \"eedbd58f-f39c-41fc-bc71-e4b882bd41d1\", //myId\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nexport const getResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  // если ошибка, отклоняем промис\n  return Promise.reject(`Ошибка: ${res.status}`);\n};\n\n//получить карточки с сервера\nexport const getInitialCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n  })\n  .then(getResponse)\n  .then((data) => {\n    return data;\n  })\n};\n\n//получить данные о пользователе с сервера\nexport const getUser = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n  })\n    .then(getResponse)\n    .then((data) => {\n      return data;\n    })\n};\n\n// Удаление карточки по идентификатору\nexport const deleteCardId = (id) => {\n  return fetch(`${config.baseUrl}/cards/` + `${id}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  })\n  .then(getResponse)\n};\n\n// Обновление информации о пользователе\nexport const patchUser = (name, about) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name,\n      about,\n    }),\n  })\n  .then(getResponse)\n};\n\n//добавление новой карточки\nexport const postCard = (name, link) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name,\n      link,\n    }),\n  })\n  .then(getResponse)\n};\n\n// Добавление лайка карточке\nexport const addLikeCard = (id) => {\n  return fetch(`${config.baseUrl}/cards/likes/` + `${id}`, {\n    method: \"PUT\",\n    headers: config.headers,\n  })\n  .then(getResponse)\n}\n\n\n// Удаление лайка с карточки\nexport const deleteLikeCard = (id) => {\n  return fetch(`${config.baseUrl}/cards/likes/` + `${id}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  })\n  .then(getResponse)\n}\n\n// Обновление аватара пользователя\nexport const patchAvatar = (avatar) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({ avatar: avatar }),\n  })\n  .then(getResponse)\n};\n\n//ux\nconst renderLoading = ({ buttonElement, isLoading }) => {\n  if (isLoading) {\n    buttonElement.textContent = \"Сохранение...\";\n  } else {\n    buttonElement.textContent = \"Сохранить\";\n  }\n};\n","import \"./pages/index.css\";\nimport { openPopup, closePopup } from \"./components/modal.js\";\nimport { createCard, putLike } from \"./components/card.js\";\nimport {\n  validationConfig,\n  enableValidation,\n  clearValidation,\n} from \"./components/validation.js\";\nimport {\n  getUser,\n  getInitialCards,\n  postCard,\n  patchUser,\n  deleteCardId,\n  patchAvatar,\n  deleteLikeCard,\n  addLikeCard\n} from \"./components/api.js\";\n\nconst placesList = document.querySelector(\".places__list\");\n\nconst popupEditElement = document.querySelector(\".profile__edit-button\");\nconst popupAddElement = document.querySelector(\".profile__add-button\");\nconst popupEditContent = document.querySelector(\".popup_type_edit\");\nconst popupAddContent = document.querySelector(\".popup_type_new-card\");\n\nconst popupImage = document.querySelector(\".popup_type_image\");\nconst popupImageCaption = popupImage.querySelector(\".popup__caption\");\nconst popupImagePicture = popupImage.querySelector(\".popup__image\");\n\nconst formCardElement = document.forms[\"new-place\"];\nconst buttonSave = formCardElement.querySelector(\".popup__button\");\nconst nameInput = document.querySelector(\".popup__input_type_name\");\nconst jobInput = document.querySelector(\".popup__input_type_description\");\n\nconst formPersonElement = document.forms[\"edit-profile\"];\nconst cardNameInput = document.querySelector(\".popup__input_type_card-name\");\nconst cardUrlInput = document.querySelector(\".popup__input_type_url\");\n\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst avatarImageButton = document.querySelector(\".profile__image\");\nconst popupAvatar = document.querySelector(\".popup_type_new-avatar\");\nconst avatarInput = document.querySelector('input[name=\"link_avatar\"]');\n\n\nconst formDeleteCard = document.forms[\"delete-card\"];\nconst formDeleteCardButton = formDeleteCard.querySelector(\".popup__button\");\nconst popupDelete = document.querySelector(\".popup_type_delete-card\");\n\nconst formAvatarElement = document.forms[\"new-avatar\"];\nconst buttonAvatarSave = formAvatarElement.querySelector(\".popup__button\");\n\nlet userId = \"\";\n\n// Объект с колбэками для работы с событиями карточек\nconst callbacksObject = {\n  likeCallback: putLike,\n  deleteCardCallback: deleteCard,\n  openImageCallback: openImagePopup,\n  openDeletePopupCallBack: openDeletePopup, // was openPopup,\n  deleteLikeCard: deleteLikeCard,\n  addLikeCard: addLikeCard,\n}\n\n// Функция открытия модального окна с изображением карточки\nfunction openImagePopup(cardName, cardLink) {\n  popupImagePicture.src = cardLink;\n  popupImagePicture.alt = cardName;\n  popupImageCaption.textContent = cardName;\n  openPopup(popupImage);\n}\n\n//удалить карточку по id\nfunction deleteCard(cardElement, _id) {\n  deleteCardId(_id)\n    .then(() => {\n      cardElement.remove();\n      closePopup(popupDelete);\n    })\n    .catch((err) => {\n      console.error(\"Ошибка при удалении карточки:\", err);\n    });\n}\n\nfunction openDeletePopup(cardElement, cardId) {\n  formDeleteCardButton.cardElement = cardElement;\n  formDeleteCardButton.cardId = cardId;\n  openPopup(popupDelete);\n}\n\n// Слушатель подтверждения удаления карточки по id\nformDeleteCardButton.addEventListener(\"click\", () => {\n  deleteCard(formDeleteCardButton.cardElement, formDeleteCardButton.cardId);\n});\n\n//запрос на сервер данных Profile и отобразить их при загрузке страницы;\nconst updateProfileData = (data) => {\n  profileTitle.textContent = data.name;\n  profileDescription.textContent = data.about;\n  userId = data._id;\n  avatarImageButton.style.backgroundImage = `url(${data.avatar})`;\n}\n\n//ф-ия смены имени и описания профиля\nfunction changeProfileFormSubmit(evt) {\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\n  const buttonSave = formPersonElement.querySelector(\".popup__button\");\n  loading(buttonSave, true);\n  const name = (profileTitle.textContent = nameInput.value);\n  const about = (profileDescription.textContent = jobInput.value);\n  patchUser(name, about)\n    .then((dataUser) => {\n      // Обновление отображаемых данных профиля на странице\n      profileTitle.textContent = dataUser.name;\n      profileDescription.textContent = dataUser.about;\n      closePopup(popupEditContent);\n    })\n    .catch((err) => {\n      console.error(\"Ошибка при обновлении профиля:\", err);\n    })\n    .finally(() => {\n      loading(buttonSave, false);\n    });\n}\n\n//ф-я добавления новой карточки по ссылке\nfunction addCardFormSubmit(evt) {\n  evt.preventDefault();\n  loading(buttonSave, true);\n  const cardNameValue = cardNameInput.value;\n  const cardUrlValue = cardUrlInput.value;\n  //отправить на сервер и вернуть данные карточки\n  postCard(cardNameValue, cardUrlValue)\n    .then((dataCard) => {\n      placesList.prepend(createCard(dataCard, callbacksObject, userId));\n      closePopup(popupAddContent);\n    })\n    .catch((err) => {\n      console.error(\"Ошибка при добавлении карточки:\", err);\n    })\n    .finally(() => {\n      loading(buttonSave, false);\n    });\n}\n\n//вывод карточек с сервера\nconst renderCards = (dataCards) => {\n  dataCards.forEach((item) => {\n    placesList.append(createCard(item, callbacksObject, userId));\n  });\n}\n\n//слушатель - изменение описания профиля\nformPersonElement.addEventListener(\"submit\", function (evt) {\n  changeProfileFormSubmit(evt);\n});\n\n//слушатель - добавление карточки по ссылке\nformCardElement.addEventListener(\"submit\", addCardFormSubmit);\n\n//слушатель - открыть попап \"Редактировать профиль\"\npopupEditElement.addEventListener(\"click\", () => {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  clearValidation(popupEditContent, validationConfig);\n  openPopup(popupEditContent);\n});\n\n//слушатель - открыть попап \"Новое место\"\npopupAddElement.addEventListener(\"click\", () => {\n  cardNameInput.value = \"\";\n  cardUrlInput.value = \"\";\n  clearValidation(popupAddContent, validationConfig);\n  openPopup(popupAddContent);\n});\n\n// UX\nconst loading = (button, isLoading) => {\n  button.textContent = isLoading ? \"Сохранение...\" : \"Сохранить\";\n}\n\n//слушатель - открыть попап \"Смена аватара\"\navatarImageButton.addEventListener(\"click\", () => {\n  avatarInput.value = \"\";\n  clearValidation(popupAvatar, validationConfig);\n  openPopup(popupAvatar);\n});\n\n//слушатель - изменение аватара\nformAvatarElement.addEventListener(\"submit\", (evt) => {\n  evt.preventDefault();\n  loading(buttonAvatarSave, true);\n  const avatar = avatarInput.value;\n  const currentAvatar = avatarImageButton.style.backgroundImage;\n  patchAvatar(avatar)\n    .then((data) => {\n      avatarImageButton.style.backgroundImage = `url(${data.avatar})`;\n      closePopup(popupAvatar);\n    })\n    .catch((err) => {\n      console.error(\"Ошибка при обновлении аватара:\", err);\n      avatarImageButton.style.backgroundImage = currentAvatar;\n    })\n    .finally(() => {\n      loading(buttonAvatarSave, false);\n    });\n});\n\nPromise.all([getUser(), getInitialCards()])\n  .then((result) => {\n    const user = result[0];\n    userId = user._id;\n    const cards = result[1];\n    updateProfileData(user);\n    renderCards(cards, callbacksObject, user._id);\n  })\n  .catch((err) => {\n    console.error(\"Произошла ошибка при получении данных:\", err);\n  });\n\nenableValidation(validationConfig);\n"],"names":["closePopupByCross","evt","closePopup","target","closest","closePopupByEscape","event","key","document","querySelector","closePopupOverlay","classList","contains","element","remove","removeEventListener","openPopup","add","addEventListener","createCard","item","callbacksObject","userId","openImageCallback","likeCallback","openDeletePopupCallBack","deleteLikeCard","addLikeCard","cardElement","content","cloneNode","cardImage","cardTitle","likeCounter","cardDeleteButton","likeButton","textContent","name","src","link","alt","likes","length","some","likeItem","_id","style","display","owner","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","concat","id","hasInvalidInput","inputList","validity","valid","toggleButtonState","buttonElement","setAttribute","removeAttribute","clearValidation","Array","from","querySelectorAll","forEach","config","baseUrl","headers","authorization","getResponse","res","ok","json","Promise","reject","status","placesList","popupEditElement","popupAddElement","popupEditContent","popupAddContent","popupImage","popupImageCaption","popupImagePicture","formCardElement","forms","buttonSave","nameInput","jobInput","formPersonElement","cardNameInput","cardUrlInput","profileTitle","profileDescription","avatarImageButton","popupAvatar","avatarInput","formDeleteCardButton","popupDelete","formAvatarElement","buttonAvatarSave","then","catch","err","console","error","deleteCardCallback","deleteCard","cardName","cardLink","cardId","fetch","method","preventDefault","about","loading","value","body","JSON","stringify","dataUser","finally","changeProfileFormSubmit","dataCard","prepend","button","isLoading","avatar","currentAvatar","backgroundImage","patchAvatar","data","all","result","user","dataCards","cards","append","patternMismatch","setCustomValidity","dataset","errorMessage","validationMessage","showInputError","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}